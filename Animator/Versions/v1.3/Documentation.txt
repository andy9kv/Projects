
-----------------Documentation of the Entire Project------------------

Version 1.1 - Begun December 20th, 2017

Project Description:

    This project is an Animator. Based on this implementation, an
Animator is a collection of Scenes displayed in rapid succession. A
Scene is a collection of shapes in particular locations. Many similar
Scenes are drawn and displayed as a Flipbook, to achieve rudimentary
animation.

Project Architecture:

    At the lowest level, there are vectors (Vec) that hold an array of
Doubles, and matrices (Mat) that hold an array of Vecs. A polygon 
(Poly) represents a shape, it holds a Mat (collection of Vecs acting
as coordinates [x, y, z]), a Vec (color specification [R, G, B]), and
a boolean (determines if the shape will be drawn as an solid figure
or as a line/frame). These classes function together to allow shapes
and their locations to be represented.

    A Scene Graph represents a "scene" (collection of shapes) in the
form of a tree holding Nodes. The general idea is to avoid a static
array of shapes to represent a scene but to have them dynamically
change as needed. To this purpose, some shapes are grouped together
such that any transformation (shifting, rotating, etc) applied to a
particular shape would apply to others in its group. This can be done
in a tree, where each node holds a shape and the transformations that
apply to it and its children. 

    Each Node holds a single shape (Poly), a name (String), uniqueID 
(int), a parent (Node), a list of children (ArrayList<Node>), a
rotation matrix (Mat), a translation matrix (Mat), and a scalar
matrix (Mat). A Scene Graph holds the root node and its parent data
structure (Flipbook) so that it could request uniqueIDs. A Flipbook
stores a list of scenes (ArrayList<Scene Graph>), a uniqueIDTracker
(int), and a framerate (Double). It does nothing more than display
framerate Scene Graphs per second.

Other Notes:

    Each class describes its purpose with comments at the top. Methods
are grouped into sections based on functionality. Some sections and 
each method also have descriptions about their purposes/functionality.